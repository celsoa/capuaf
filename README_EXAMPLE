README_EXAMPLE

Test examples for CAP.
The default example should always be run, prior to committing any changes to the code.

Figures to check are in the directory 20080418093700_check_orig

====================================================================================
START-UP INSTRUCTIONS

0. By default, do not run cap on a cluster (skip this step).
The following instructions apply to the UAF pacman cluster.

0a. load environmental variables with this command (add it to your .bashrc file if you want):

> source /import/unsupported/erthquak/bashrc_seismo_util

0b. check modules:

> module list

pacman12 % module list
Currently Loaded Modulefiles:
  1) git/1.8.2.3               3) openmpi-gnu-4.7.3/1.4.3   5) netcdf/4.3.0.gnu-4.7.3
  2) gcc/4.7.3                 4) PrgEnv-gnu/4.7.3

0c. check out a local copy of CAP

git clone https://USERNAME@github.com/uafseismo/cap.git cap

0d. assign $CAPHOME in your .bashrc, e.g., 

export CAPHOME=$CENTER/CAP/src

1. check paths (see .bashrc)

> echo "CAPHOME =" $CAPHOME ;  echo "CAPRUN =" $CAPRUN ; echo "NRHOME_C =" $NRHOME_C ; echo "GMTHOME =" $GMTHOME

Make sure that none of these is empty.

note: by default at UAF these are set in /home/admin/share/global_bashrc

export GEOTOOLS=$HOME/GEOTOOLS
export SUTIL=/usr/local/seismo
export NRHOME_C=$SUTIL/grp-utils/nr/NR_C302/legacy/nr2/C_211_mod
export NRHOME_F90=$SUTIL/grp-utils/nr/recipes_f-90
export CAPHOME=$GEOTOOLS/tomo_util/cap
export PATH=$CAPHOME:$PATH
export CAPRUN=$HOME/PROJECTS/CAP
export PATH=$PATH:$SUTIL/bin:$HOME/bin:.

If you make any changes to your .bashrc variables, be sure to source the file:

> source ~/.bashrc

2. set up directories within $CAPRUN

> echo $CAPRUN
> mkdir -p $CAPRUN
> cd $CAPRUN
> mkdir -p models/cus inv/cus

3. compile cap.c

> cd $CAPHOME
> make all >& make.log

note: "make clean" before compilation if you have a previously compiled cap

4. check path to utilities

> which fk pssac2 cap cap.pl cap_plt.pl depth.pl depth_test

Make sure that none of these is missing.

====================================================================================
DEFAULT EXAMPLE 1: Illinois event, double couple (DC)

0. modify cap.pl to indicate that you want to compute your own Green's functions

Uncomment the following line in cap.pl

$green = "$caprun/models";                # user testing

1. run the frequency-wavenumber code fk

> cd $CAPRUN/models/cus
> cp $SUTIL/grp-utils/fk3.0/cus .
> fk.pl -Mcus/15 -N512/0.4/2 140 145 205 230 260 275 295 410

note: this uses the "cus" 1D model for "central U.S."
note: You do not need to run fk if you have a pre-computed library of Green's functions.

2. run fk again to generate isotropic components

> fk.pl -Mcus/15 -N512/0.4/2 -S0 140 145 205 230 260 275 295 410

 This will create 3 additional green functions for each distance of the form dist.grn.(a-c),
 e.g., 140.grn.a, 140.grn.b, 140.grn.c.

3. prepare data directory

> cd $CAPRUN/inv/cus
> rsync -av $CAPHOME/EXAMPLES/20080418093700 .

Check that you have new weight.dat file with 12 columns (3 extra for Pnl_window, surf_pick, surf_window).
The old weight file is under the name weight_orig.dat

> more 20080418093700/weight.dat

4. run cap

> cap.pl -H0.2 -P1 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -Y2 20080418093700

> gv 20080418093700/cus_015.ps &

You should see a reasonable output for a moment tensor inversion.

5. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015.out

(The output from the last command should be blank.)

6. From here on out in README_EXAMPLE, we assume that the Green's functions are pre-computed.

Make this change in cap.pl:

$green = "/store/wf/FK_synthetics";        # standard models at UAF
#$green = "$caprun/models";                # user testing

7. perform the depth test

Run cap for different depths by setting the range and increment for which you want to run depth test using -A flag (-Adep_min/dep_max/dep_inc).
One output (.out) file should be generated for each depth.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -Y2 -A5/30/5 20080418093700

Run depth_test (script for calling depth.pl)
> depth_test 20080418093700 cus 
> gv dep_20080418093700.ps &

5. check the depth test

> diff junk1.out $CAPHOME/EXAMPLES/20080418093700_check/junk1_dc.out
> diff junk2.out $CAPHOME/EXAMPLES/20080418093700_check/junk2_dc.out
> gv $CAPHOME/EXAMPLES/20080418093700_check/depth_dc.ps &

====================================================================================
EXAMPLE 2: Illinois event, DC with P wave polarities in weight file

0. Follow same step 3 EXAMPLE 1

NOTE: skip_zero_weights=1 (default) will not plot the polarity information but it will be used

In cap.c skip_zero_weights=0 and compile

NOTE: skip_zero_weights=1 is the default; CAP will not read an input seismogram with all-zero weights
NOTE: skip_zero_weights=0 allows the use of polarities even when all of a station's weights =0 (in the input file);
      CAP still needs at least 1 waveform for the inversion
KEY NOTE: skip_zero_weights=0 every entry in the weight file needs to have either a polarity or a wiggle

FUTURE: Whether skip_zero_weights=0 or 1, what we want is that if there is a station with all-zero weights and no polarity,
        then we want CAP to simply skip over that station, as if it wasn't in the file.

> make cap

a. Run cap with all available polarities
> cap.pl -H0.2 -P1.5e-6 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_all.dat 
==> since all polarities are consistent with the waveform-only solution, the solution is the sames as in EXAMPLE 1

This will result can be used to compare results (b)-(d) below.
> gv ./20080418093700/cus_015.ps &
> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_DC_pol.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_DC_pol.out

b. run cap with only one polarity measurement
> cap.pl -H0.2 -P1.5e-6 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_one.dat 

c. run cap with all polarities but one flipped: PVMO
> cap.pl -H0.2 -P1.5e-6 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 
==> solution is slightly worse, as PVMO was nearly nodal and is now within a colored quadrant

d. run cap with all polarities but one flipped: WVT
> cap.pl -H0.2 -P1.5e-6 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badWVT.dat 
==> solution is significantly worse, since WVT was not nodal and is now within a colored quadrant

e. run cap with all polarities but one flipped: BLO
> cap.pl -H0.2 -P1.5e-6 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badBLO.dat 
==> no solution is possible

note: the command "-I10/0.1 -J0/0/0/0" could be added but will not affect the results

====================================================================================
EXAMPLE 3: Illinois event, DC with P wave polarities in weight file

Given bad polarity observations (eg PVMO flipped from (correct) negative to (incorrect) positive),
cap may still allow a solution, within error threshold, even if it conflicts with the polarity observation. 

KEY: threshold should be NEGATIVE if polarities are allowed to conflict expected polarity.

This example runs 6 cases for different first-motion threshold (fm_thr) with values:
fm_thr=-1.0, -0.2, -0.1, 0, 0.4, 1.0 (see cap flag -F to set thresholds).

0. Follow same step 3 EXAMPLE 1

1. Run cap with with 

a. no MT grid point is rejected, so the solution is same as EXAMPLE 1 (PVMO obs does not match PVMO pred)
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F-1.0 -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

b. a relatively small number of MT grid points are rejected that have large-amplitude mismatch of polarities;
   this solution, with PVMO not matching PVMO pred, is not rejected beacause the PVMO is low amplitude
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F-0.2 -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

c. PVMO is "just" inside the colored quadrant
   note: PVMO could be "just" inside the white quadrant as well
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F-0.1 -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

d. PVMO is "just" inside the colored quadrant (PVMO obs does match PVMO pred)
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F0.0  -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

e. the solution seeks to maximize the minimum amplitude associated with any (correct) polarity (PVMO obs does match PVMO pred)
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F0.4  -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

f. no solution, since every MT grid point is rejected with some station having too small an amplitude
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F1.0  -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

====================================================================================
EXAMPLE 4: Illinois event, FMT with Zhu line search

0. Follow same step 3 EXAMPLE 1

1. run cap with the -J flag
ISO and CLVD will be searched for in their general range: (-1 < ISO < +1) and (-0.5 < CLVD < 0.25).
However you can change the increment by using -J flag in the input command line.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -J0/0.1/0/0.1 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: -J0/0.1/0/0.1 means line search from (0,0) in increments of 0.1 in each direction

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_line.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_line.out

(The output from the last command should be blank.)

3. perform the depth test (Green's functions already computed)

> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -Y2 -J0/0.1/0/0.1 -A5/30/5 20080418093700

Run depth_test (script for calling depth.pl)
> depth_test 20080418093700 cus 
> gv dep_20080418093700.ps &

4. check the depth test

> diff junk1.out $CAPHOME/EXAMPLES/20080418093700_check/junk1_fmt_line.out
> diff junk2.out $CAPHOME/EXAMPLES/20080418093700_check/junk2_fmt_line.out
> gv $CAPHOME/EXAMPLES/20080418093700_check/depth_fmt_line.ps &

====================================================================================
EXAMPLE 5: Illinois event, FMT with fixed focal mech (strike/dip/rake/iso/clvd/mag)

0. Follow same step 3 EXAMPLE 1

1. run cap
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.21 -E0 -K0 -Y2 -R296/296/84/84/6/6 -J0.16/0/0.04/0 -I10/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: the solution is slightly better than the result in EXAMPLE 4 (why? precision?)

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_fixed_zhu.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_fixed_zhu.out

====================================================================================
EXAMPLE 6: Illinois event, DC, full grid search (no line search)

This is like EXAMPLE 1, but here we use a single, uniform grid search with no line searches or refined grid searches.
This is aimed at performing a secondary analysis of uncertainties outside of CAP.

0. Follow same step 3 EXAMPLE 1

1.  run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/0.1 -E1 -K1 -Y2 -J0/0/0/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: -J0/0/0/0 means fixed ISO and CLVD components -- the command can be omitted and the result will be the same
note: -I here will use a 0.1 interval of Mw

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_dc_grid.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_dc_grid.out

====================================================================================
EXAMPLE 7: same as EXAMPLE 6 but with fixed magnitude

0. Follow same step 3 EXAMPLE 1

1. Run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.2 -I10/0 -E1 -K1 -Y2 -J0/0/0/0 20080418093700

====================================================================================
EXAMPLE 8: Illinois event, FMT with lune parameterization, full grid search (no line search)

ISO will be gridded by considering equal spacing in sin(iso) space
DIP will be gridded by considering equal spacing in cos(dip) space

0. Follow same step 3 EXAMPLE 1

1.  run cap (this will take a couple minutes)
ISO and CLVD will be searched for in their general range (-90 < ISO < +90 ; -30 < CLVD < +30) (lune parameters).
However you can change the increment by using -J flag in the input command line.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/0.2/10 -E1 -K1 -Y2 -J-90/90/-30/30 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: -J0/5/0/5 means 5 deg increment in ISO (delta) and 5 deg increment in CLVD (longitude); the 0's are ignored in this mode
note: -I here will use a 0.2 interval of Mw and 10 degree for ISO and CLVD lune parameters

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_grid.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_grid.out

====================================================================================
EXAMPLE 9: Illinois event, Direct search FMT (LUNE parameterization) with fixed focal mech (strike/dip/rake/iso/clvd/mag)

0. Follow same step 3 EXAMPLE 1

1. run cap
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.21 -E1 -K1 -Y2 -R296/296/84/84/6/6 -J-30/30/10/10 -I10/0/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: the solution is slightly better than the result in EXAMPLE 4 (why? precision?)

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_fixed_lune.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_fixed_lune.out

====================================================================================
EXAMPLE 10: Illinois event, DC with random sample search (optional: grid-search over Mw)

0. Follow same step 3 EXAMPLE 1

1. Run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.2 -I2/0 -E1 -K2 -Y2 -J0/0/0/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

NOTES
- the number of samples is based on the orientation increment (-I) which is 2 deg here; decrease this for more samples
- If running only at one particular magnitude, set -I magnitude increment to 0 (e.g., -I2/0)
- To search over magnitude too, use nonzero magnitude increment
- For any other ISO or CLVD value, set it using -J flag. Just remember to keep the increment=0 (e.g. -J10/0/10/0)
- the -J0/0/0/0 can be omitted, and the output will be identical

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_dc_rand.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_dc_rand.out

====================================================================================
EXAMPLE 11: Illinois event, FMT-fixed-magnitude with random sample search (optional: grid-search over Mw)

0. Follow same step 3 EXAMPLE 6

1. Run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.2 -I2/0/10 -E1 -K2 -Y2 -J0/1/0/1 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

NOTES
- the number of samples is based on the orientation increment (-I) which is 2 deg here; decrease this for more samples
- If running only at one particular magnitude, set -I magnitude increment to 0 (e.g., -I2/0)
- To search over magnitude too, use nonzero magnitude increment
- the ISO and CLVD increments need to be set to any nonzero number (e.g., -J10/1/10/2 would perform the same task)

2. check the output files

> gv $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_rand.ps &
> diff 20080418093700/cus_015.out $CAPHOME/EXAMPLES/20080418093700_check/cus_015_fmt_rand.out

====================================================================================

FOR UTURUNCU EXAMPLES, SEE README_EXAMPLE_utu

====================================================================================
EXAMPLE 16: Running Alaska Example (20090407201255351)

1. open cap.c and check that FTC_data=1 and FTC_green=0 (recompile if needed: make all >& make.log )

2. prepare run
> mkdir -p $CAPRUN/inv/scak
> cd $CAPRUN/inv/scak
> rsync -av $CAPHOME/EXAMPLES/20090407201255351 .

3. Eight different weight files options: weightijk.dat (Last three numbers are for (i)-body wave, (j)-surface waves, (k)-station choice)
   i = 1 or 0 for whether body waves are used or not
   j = 1 or 0 for whether surface waves are used or not
   k = 0 for all stations, 1 for selected stations, 2 for AEC stations

 -> weight011.dat - only surface waves at selected good stations (M011)
 -> weight012.dat - only surface waves at AEC stations (M012)
 -> weight101.dat - only body waves at selected good stations (M101)
 -> weight110.dat - both body and surface wave at all available stations (M110)
 -> weight111.dat - both body and surface wave at selected good stations (M111)
 -> weight112.dat - both body and surface wave at AEIC stations (M112)
 -> az_sort_weight110.dat - same as weight110.dat but azimuthally sorted stations
 -> az_sort_weight111.dat - same as weight111.dat but azimuthally sorted stations

--------------------------------------------------------------------------------
4. Example commands:
a. Using body and surface waves at selected stations (M111)
Using L1 norm:
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight111.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_041.ps &
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M111.ps &

Depth test
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight111.dat -E1 -K1 -Y1 -A30/50/2 20090407201255351
> depth_test 20090407201255351 scak
> gv dep_20090407201255351.ps &
> gv $CAPHOME/EXAMPLES/20090407201255351_check/dep_20090407201255351_L1_M111.ps &

Using L2 norm: 
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight111.dat -E1 -K1 -Y2 20090407201255351
> gv 20090407201255351/scak_041.ps &
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L2_M111.ps &

Depth test
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight111.dat -E1 -K1 -Y2 -A30/50/2 20090407201255351
> depth_test 20090407201255351 scak
> gv dep_20090407201255351.ps &
> gv $CAPHOME/EXAMPLES/20090407201255351_check/dep_20090407201255351_L2_M111.ps &

--------------------------------------------------------------------------------

b. Using body and surface waves at all stations (M110)
Using L1 norm:
> cap.pl -H0.02 -P2e-6/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight110.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_041.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M110.ps &

Depth test
> cap.pl -H0.02 -P2e-6/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight110.dat -E1 -K1 -Y1 -A30/50/2 20090407201255351
> depth_test 20090407201255351 scak
> gv dep_20090407201255351.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/dep_20090407201255351_L1_M110.ps & 

Using L2 norm: 
> cap.pl -H0.02 -P2e-6/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight110.dat -E1 -K1 -Y2 20090407201255351
> gv 20090407201255351/scak_041.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L2_M110.ps & 

Depth test
> cap.pl -H0.02 -P2e-6/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight110.dat -E1 -K1 -Y2 -A30/50/2 20090407201255351
> depth_test 20090407201255351 scak
> gv dep_20090407201255351.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/dep_20090407201255351_L2_M110.ps & 
--------------------------------------------------------------------------------

5. Similarly run for other weight files. 
a. Using body and surface waves at AEC stations (M112) and L1 norm
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0.1 -Zweight112.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_041.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M112.ps & 

b. Using just body at selected stations (M101)
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_27/4.5 -I10/0.1 -Zweight101.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_027.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M101.ps & 

c. Using just surface waves at selected stations (M011)
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_47/4.5 -I10/0.1 -Zweight011.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_047.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M011.ps & 

d. Using just the surface waves at AEC stations (M012)
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_47/4.5 -I10/0.1 -Zweight012.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_047.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M012.ps & 
--------------------------------------------------------------------------------

6. fixed solution (for plot testing)
> cap.pl -H0.02 -P1/20/60 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/5.0 -R20/20/42/42/-90/-90 -I10/0.1 -Zweight111.dat -E1 -K1 -Y1 20090407201255351

7. For azimuthally sorted stations:
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0 -Zaz_sort_weight111.dat -E1 -K1 -Y1 20090407201255351
> gv 20090407201255351/scak_041.ps & 
> gv $CAPHOME/EXAMPLES/20090407201255351_check/20090407201255351_L1_M111_az.ps & 

====================================================================================
EXAMPLE 17: Running Alaska Example (20080918194353069) - Checking FTC data and green's outputs

1. open cap.c and set FTC_data=0 and FTC_green=0 (Filter and Cut 'NOT applied' to data and synthetics both) and recompile 
> make all

2. prepare run
> mkdir -p $CAPRUN/inv/scak
> cd $CAPRUN/inv/scak
> rsync -av $CAPHOME/EXAMPLES/20080918194353069 .

3. run (Filter and Cut 'NOT applied' to data and synthetics both)
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_72/4.8 -I10/0.1 -Zweight101.dat -E1 -K1 -Y1 20080918194353069

4. Rename output files to prevent them from being overwritten
> mv 20080918194353069/scak_072.ps 20080918194353069/scak_072_off.ps 

5. open cap.c and set FTC_data=1 and FTC_green=1 and recompile 
> make all

6. run again (Filter and Cut 'applied' to data and synthetics both)
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_72/4.8 -I10/0.1 -Zweight101.dat -E1 -K1 -Y1 20080918194353069

7. mv 20080918194353069/scak_072.ps 20080918194353069/scak_072_on.ps 

8. open cap.c and set FTC_data=1 and FTC_green=0 and recompile 
> make all

9. run again (Filter and Cut 'applied' only to data and NOT to synthetics)
> cap.pl -H0.02 -P1/20/60 -p2 -S3/10/0 -T15/120 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_72/4.8 -I10/0.1 -Zweight101.dat -E1 -K1 -Y1 20080918194353069

10. mv 20080918194353069/scak_072.ps 20080918194353069/scak_072_on_off.ps 

11. Check results
> gv 20080918194353069/scak_072_off.ps &
> gv $CAPHOME/EXAMPLES/20080918194353069_check/FTC_off.ps &

> gv 20080918194353069/scak_072_on.ps &
> gv $CAPHOME/EXAMPLES/20080918194353069_check/FTC_on.ps &

> gv 20080918194353069/scak_072_on_off.ps &
> gv $CAPHOME/EXAMPLES/20080918194353069_check/FTC_on_off.ps &

12. Similarly you can try with different weight files (> ls 20080918194353069/weight*.dat). Also try depth tests. See more results at the best depth:
> evince $CAPHOME/EXAMPLES/20080918194353069_check/FTC_on_results.pdf
> evince $CAPHOME/EXAMPLES/20080918194353069_check/FTC_off_results.pdf

====================================================================================
EXAMPLE 18: Running Nenana triggering example (20120411092157444)

1. open cap.c and set FTC_data=1 and FTC_green=0 and recompile 
> make all

2. prepare run
> mkdir -p $CAPRUN/inv/scak
> cd $CAPRUN/inv/scak
> rsync -av $CAPHOME/EXAMPLES/20120411092157444 .

3. run 
> cap.pl -H0.02 -P2e-5/1/15 -p1.5 -S0.5/2/0 -T2/40 -D1/1/0.5 -C1/10/0.3/0.6 -W1 -Mtactmod_16/3.6 -Zweight111.dat -E1 -K1 -Y1 20120411092157444 -A10/30/1 
> depth_test 20120411092157444 tactmod

4. Check results
> gv dep_20120411092157444.ps & 
> gv $CAPHOME/EXAMPLES/20120411092157444_check/dep_20120411092157444.ps & 
(check that the best depth is 16 km)

> gv 20120411092157444/tactmod_016.ps & 
> gv $CAPHOME/EXAMPLES/20120411092157444_check/tactmod_016.ps & 

====================================================================================
TIPS

1. If running in debug mode, remember to remove all the log files otherwise they will be appended (not overwritten!).
2. When running in random seach mode and it doesn't create as many sample points as specified, 
   then retry by giving reduced orientation increment (example: if -I5/0 doesn't work, try -I2/0).
