README_EXAMPLE

Test examples for CAP.
The default example should always be run, prior to committing any changes to the code.

Figures to check are in the directory 20080418093700_check_orig

====================================================================================
START-UP INSTRUCTIONS

0. By default, do not run cap on a cluster (skip this step).

BUT: if on UAF cluster, check modules (GMT, netcdf, gfortran)

> module purge
> module load PrgEnv-gnu/4.5.1 gmt/4.5.7
> module list

load environment variables

> source $EUTIL/seismo_bashrc

1. check paths (see .bashrc)

> echo "CAPHOME =" $CAPHOME ;  echo "CAPRUN =" $CAPRUN ; echo "NRHOME_C =" $NRHOME_C ; echo "GMTHOME =" $GMTHOME

Make sure that none of these is empty.

note: by default at UAF you can set this in your .bashrc:

export GEOTOOLS=$HOME/GEOTOOLS
export SUTIL=/usr/local/seismo
export NRHOME_C=$SUTIL/grp-utils/nr/NR_C302/legacy/nr2/C_211_mod
export NRHOME_F90=$SUTIL/grp-utils/nr/recipes_f-90
export CAPHOME=$GEOTOOLS/tomo_util/cap
export PATH=$CAPHOME:$PATH
export CAPRUN=$HOME/PROJECTS/CAP
export PATH=$PATH:$SUTIL/bin:$HOME/bin:.

source the file after making changes

> source ~/.bashrc

2. set up directories within $CAPRUN

> echo $CAPRUN
> mkdir -p $CAPRUN
> cd $CAPRUN
> mkdir -p models/cus inv/cus

3. compile cap.c

> cd $CAPHOME
> make all >& make.log

note: "make clean" before compilation if you have a previously compiled cap

4. check path to utilities

> which fk pssac2 cap cap.pl cap_plt.pl depth.pl depth_test

Make sure that none of these is missing.

====================================================================================
DEFAULT EXAMPLE 1: Illinois event, double couple (DC)

1. run the frequency-wavenumber code fk

> cd $CAPRUN/models/cus
> cp $SUTIL/grp-utils/fk3.0/cus .
> fk.pl -Mcus/15 -N512/0.4/2 140 145 205 230 260 275 295

note: this uses the "cus" 1D model for "central U.S."
note: You do not need to run fk if you have a pre-computed library of Green's functions.

2. run fk again to generate isotropic components

> fk.pl -Mcus/15 -N512/0.4/2 -S0 140 145 205 230 260 275 295

 This will create 3 additional green functions for each distance of the form dist.grn.(a-c),
 e.g., 140.grn.a, 140.grn.b, 140.grn.c.

3. prepare data directory

> cd $CAPRUN/inv/cus
> rsync -av $CAPHOME/20080418093700 .

Check that you have new weight.dat file with 12 columns (3 extra for Pnl_window, surf_pick, surf_window).
The old weight file is under the name weight_orig.dat

> more 20080418093700/weight.dat

4. run cap

> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -Y2 20080418093700

> gv 20080418093700/cus_015.ps &

You should see a reasonable output for a moment tensor inversion.

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015.out

(The output from the last command should be blank.)

6. perform the depth test

This requires computing Green's functions for the depths used in the grid search.

> cd $CAPRUN/models/cus
> fk.pl -Mcus/5  -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/5  -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/10 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/10 -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/20 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/20 -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/25 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/25 -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/30 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/30 -N512/0.4/2 -S0 140 145 205 230 260 275 295

Run cap for different depths by setting the range and increment for which you want to run depth test using -A flag (-Adep_min/dep_max/dep_inc).
One output (.out) file should be generated for each depth.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -Y2 -A5/30/5 20080418093700

Run depth_test (script for calling depth.pl)
> depth_test 20080418093700 cus 
> gv dep_20080418093700.ps &

5. check the depth test

> diff junk1.out $CAPHOME/20080418093700_check/junk1_dc.out
> diff junk2.out $CAPHOME/20080418093700_check/junk2_dc.out
> gv $CAPHOME/20080418093700_check/depth_dc.ps &

====================================================================================
EXAMPLE 2: Illinois event, DC with P wave polarities in weight file

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

a. Run cap with all available polarities
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_all.dat 
==> since all polarities are consistent with the waveform-only solution, the solution is the sames as in EXAMPLE 1

b. run cap with only one polarity measurement
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_one.dat 

c. run cap with all polarities but one flipped: PVMO
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 
==> solution is slightly worse, as PVMO was nearly nodal and is now within a colored quadrant

d. run cap with all polarities but one flipped: WVT
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badWVT.dat 
==> solution is significantly worse, since WVT was not nodal and is now within a colored quadrant

e. run cap with all polarities but one flipped: BLO
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badBLO.dat 
==> no solution is possible

note: the command "-I10/0.1 -J0/0/0/0" could be added but will not affect the results

====================================================================================
EXAMPLE 3: Illinois event, DC with P wave polarities in weight file

Given bad polarity observations (eg PVMO flipped from (correct) negative to (incorrect) positive),
cap may still allow a solution, within error threshold, even if it conflicts with the polarity observation. 

KEY: threshold should be NEGATIVE if polarities are allowed to conflict expected polarity.

This example runs 6 cases for different first-motion threshold (fm_thr) with values:
fm_thr=-1.0, -0.2, -0.1, 0, 0.4, 1.0 (see cap flag -F to set thresholds).

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. Run cap with with 

a. no MT grid point is rejected, so the solution is same as EXAMPLE 1 (PVMO obs does not match PVMO pred)
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F-1.0 -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

b. a relatively small number of MT grid points are rejected that have large-amplitude mismatch of polarities;
   this solution, with PVMO not matching PVMO pred, is not rejected beacause the PVMO is low amplitude
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F-0.2 -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

c. PVMO is "just" inside the colored quadrant
   note: PVMO could be "just" inside the white quadrant as well
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F-0.1 -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

d. PVMO is "just" inside the colored quadrant (PVMO obs does match PVMO pred)
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F0.0  -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

e. the solution seeks to maximize the minimum amplitude associated with any (correct) polarity (PVMO obs does match PVMO pred)
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F0.4  -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

f. no solution, since every MT grid point is rejected with some station having too small an amplitude
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F1.0  -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -E1 -K1 -Y2 -Mcus_15/5.0 20080418093700 -Zweight_pfm_badPVMO.dat 

====================================================================================
EXAMPLE 4: Illinois event, FMT with Zhu line search

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. run cap with the -J flag
ISO and CLVD will be searched for in their general range: (-1 < ISO < +1) and (-0.5 < CLVD < 0.25).
However you can change the increment by using -J flag in the input command line.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -J0/0.1/0/0.1 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: -J0/0.1/0/0.1 means line search from (0,0) in increments of 0.1 in each direction

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_fmt_line.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_fmt_line.out

(The output from the last command should be blank.)

6. perform the depth test (Green's functions already computed)

> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -E0 -K0 -Y2 -J0/0.1/0/0.1 -A5/30/5 20080418093700

Run depth_test (script for calling depth.pl)
> depth_test 20080418093700 cus 
> gv dep_20080418093700.ps &

5. check the depth test

> diff junk1.out $CAPHOME/20080418093700_check/junk1_fmt_line.out
> diff junk2.out $CAPHOME/20080418093700_check/junk2_fmt_line.out
> gv $CAPHOME/20080418093700_check/depth_fmt_line.ps &

====================================================================================
EXAMPLE 5: Illinois event, FMT with fixed focal mech (strike/dip/rake/iso/clvd/mag)

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. run cap
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.21 -E0 -K0 -Y2 -R296/296/84/84/6/6 -J0.16/0/0.04/0 -I10/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: the solution is slightly better than the result in EXAMPLE 4 (why? precision?)

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_fmt_fixed.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_fmt_fixed.out

====================================================================================
EXAMPLE 6: Illinois event, DC, full grid search (no line search)

This is like EXAMPLE 1, but here we use a single, uniform grid search with no line searches or refined grid searches.
This is aimed at performing a secondary analysis of uncertainties outside of CAP.

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4.  run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/0.1 -E1 -K1 -Y2 -J0/0/0/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: -J0/0/0/0 means fixed ISO and CLVD components -- the command can be omitted and the result will be the same
note: -I here will use a 0.1 interval of Mw

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_dc_grid.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_dc_grid.out

====================================================================================
EXAMPLE 7: same as EXAMPLE 6 but with fixed magnitude

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. Run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.2 -I10/0 -E1 -K1 -Y2 -J0/0/0/0 20080418093700

====================================================================================
EXAMPLE 8: Illinois event, FMT with lune parameterization, full grid search (no line search)

ISO will be gridded by considering equal spacing in sin(iso) space
DIP will be gridded by considering equal spacing in cos(dip) space

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4.  run cap (this will take a couple minutes)
ISO and CLVD will be searched for in their general range (-90 < ISO < +90 ; -30 < CLVD < +30) (lune parameters).
However you can change the increment by using -J flag in the input command line.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/0.2/10 -E1 -K1 -Y2 -J-90/90/-30/30 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: -J0/5/0/5 means 5 deg increment in ISO (delta) and 5 deg increment in CLVD (longitude); the 0's are ignored in this mode
note: -I here will use a 0.2 interval of Mw and 10 degree for ISO and CLVD lune parameters

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_fmt_grid.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_fmt_grid.out

====================================================================================
EXAMPLE 9: Illinois event, Direct search FMT (LUNE parameterization) with fixed focal mech (strike/dip/rake/iso/clvd/mag)

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. run cap
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.21 -E1 -K1 -Y2 -R296/296/84/84/6/6 -J-30/30/10/10 -I10/0/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

note: the solution is slightly better than the result in EXAMPLE 4 (why? precision?)

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_fmt_fixed.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_fmt_fixed.out

====================================================================================
EXAMPLE 10: Illinois event, DC with random sample search (optional: grid-search over Mw)

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. Run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.2 -I2/0 -E1 -K2 -Y2 -J0/0/0/0 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

NOTES
- the number of samples is based on the orientation increment (-I) which is 2 deg here; decrease this for more samples
- If running only at one particular magnitude, set -I magnitude increment to 0 (e.g., -I2/0)
- To search over magnitude too, use nonzero magnitude increment
- For any other ISO or CLVD value, set it using -J flag. Just remember to keep the increment=0 (e.g. -J10/0/10/0)
- the -J0/0/0/0 can be omitted, and the output will be identical

5. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_dc_rand.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_dc_rand.out

====================================================================================
EXAMPLE 11: Illinois event, FMT-fixed-magnitude with random sample search (optional: grid-search over Mw)

1. Follow same step 1 EXAMPLE 6
2. Follow same step 2 EXAMPLE 6
3. Follow same step 3 EXAMPLE 6

4. Follow same step 3 EXAMPLE 8

5. Run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P1.5e-7 -S2/5/0 -T35/70 -F -D1/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.2 -I2/0/10 -E1 -K2 -Y2 -J0/1/0/1 20080418093700
> gv 20080418093700/cus_015_fmt.ps &

NOTES
- the number of samples is based on the orientation increment (-I) which is 2 deg here; decrease this for more samples
- If running only at one particular magnitude, set -I magnitude increment to 0 (e.g., -I2/0)
- To search over magnitude too, use nonzero magnitude increment
- the ISO and CLVD increments need to be set to any nonzero number (e.g., -J10/1/10/2 would perform the same task)

6. check the output files

> gv $CAPHOME/20080418093700_check/cus_015_fmt_rand.ps &
> diff 20080418093700/cus_015.out $CAPHOME/20080418093700_check/cus_015_fmt_rand.out

====================================================================================
EXAMPLE 12: Bolivia event 20100516-063454, first motion polarity

1. In cap.c change: only_first_motion=1
2. Compile cap
3. Run cap
> ./cap.pl -F0.0 -I5/0/5 -J-90/90/-30/30 -Mutuhalf_5/2.4 -E1 -K1 -Y2 -Zweight.dat 20100516063454464

4. Process misfit data output from cap (file out.misfit.fmp_)
> python misfit2lune.py out.misfit.fmp_ > out.misfit_summary

5. Plot misfit on the lune with file out.misfit_summary

NOTES
- Output file from cap run (step 3) will be out.misfit.fmp_
    this file is 708M for grid spacing of 5 degrees
- No figure should be created when running first motion polarity (run without -P flag)

====================================================================================
EXAMPLE 13: Bolivia event 20100516-063454, FMT with lune parameterization, full grid search (no line search)

PART 13.1. generate greens functions

1. run the frequency-wavenumber code fk

> mkdir -p $CAPRUN/models/utuhalf
> cd $CAPRUN/models/utuhalf/
> cp $CAPHOME/20100516063454464/utuhalf .
> fk.pl -Mutuhalf/5 -N16384/0.01 11 14 18 19 21 22 31 33 37 50

note: this uses the "utuhalf" 1D model for the Uturuncu region 
note: You do not need to run fk if you have a pre-computed library of Green's functions.

2. run fk again to generate isotropic components

> fk.pl -Mutuhalf/5 -N16384/0.01 -S0 11 14 18 19 21 22 31 33 37 50

This will create 3 additional green functions for each distance of the form dist.grn.(a-c),
eg. 11.grn.a, 11.grn.b, 11.grn.c

------------
PART 13.2. cap inversion (polarities + Pnl + Surface)

ISO will be gridded by considering equal spacing in sin(iso) space
DIP will be gridded by considering equal spacing in cos(dip) space

1. prepare data directory

> mkdir -p $CAPRUN/inv/utuhalf
> cd $CAPRUN/inv/utuhalf/
> rsync -av $CAPHOME/20100516063454464 .

2. check the weight.dat file

> more 20100516063454464/weight.dat

note: weights are set as 1 1 1 1 1, which gives equal weight to body waves and surface waves
note: all P arrivals times are specified

3. check that cap is compiled

> ls -ltr $CAPHOME/cap

4a. run cap and plot with absolute amplitudes

> cd $CAPHOME
> cap.pl -H0.01 -P2.66e-06/2/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.2/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight.dat 20100516063454464

4b. run cap with data and syn SEPARATELY scaled

> cd $CAPHOME
> cap.pl -H0.01 -P0.5e+0.5/2/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.2/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight.dat 20100516063454464

note: plotting flag is set to -P0.5e+0.5/... which is a kludge for unnormalized plotting
note: lune grid will NOT do a refined search, so pick -I accordingly (here: 5 deg inc on lune; 0.1 inc Mw)
note: because all P arrivals are hand-picked (to within 0.01 s), we can set the allowable time shift for P to 0.2 s
note: -L gives the half-duration of the synthetics; this is a key command to get high-frequency synthetics in P (but not too high)
note: the result is an improvement of the CIG2013 poster (same event)

note:
surface wave time shifts are allowed to be between 0.0 s and 4.0 s, which reflects our belief that either:
   (a) the model is systematically too slow
   (b) the depth is wrong
   (c) the origin time is wrong
We are able to specify the 0.0 to 4.0 s shifts with two changes:
   (1) the relative surface time shifts are +/- 2.0, which is set as -S0.2/2.0/0
   (2) the systematic S_shifts in weight file (last column) are set to 2.0 
   --> the actual time shifts are then 0.0 s (-2.0 + 2.0) and 4.0 s (+2.0 + 2.0)

5. check output:

> gv 20100516063454464/utuhalf_005_fmt.ps &
> gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt.ps &
> diff 20100516063454464/utuhalf_005.out $CAPHOME/20100516063454464_check/utuhalf_005.out

6. try the same run, but with different weights:

note: weights are set as 1 1 1 60 60 60, which gives all weight to surface waves

> cap.pl -H0.01 -P1e-6/1/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight_2.dat 20100516063454464

> gv 20100516063454464/utuhalf_005_fmt.ps &
> gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt_2.ps &

7. try body waves only (+ polarities)

> cap.pl -H0.01 -P0.5e+0.5/1/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight_body.dat 20100516063454464

> gv 20100516063454464/utuhalf_005_fmt.ps &
> gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt_body.ps &

8. try surface waves only (+ polarities)

> cap.pl -H0.01 -P1e-6/1/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight_surf.dat 20100516063454464

> gv 20100516063454464/utuhalf_005_fmt.ps &
> gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt_surf.ps &

9. try body + surf but no polarities

note: by not using polarities (to exclude large portions of misfit space), the search takes MUCH longer

> cap.pl -H0.01 -P0.5e+0.5/1/33 -S0.2/2.0/0 -T1.5/60 -D2/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight_nopol.dat 20100516063454464

> gv 20100516063454464/utuhalf_005_fmt.ps &
> gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt_nopol.ps &

10. try body + surf + polarities BUT constrained to DC

> cap.pl -H0.01 -P0.5e+0.5/1/33 -p1e5 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1 -J0/0/0/0 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight.dat 20100516063454464

> gv 20100516063454464/utuhalf_005_fmt.ps &
> gv $CAPHOME/20100516063454464_check/utuhalf_005_dc.ps &

note: this MUST be a worse solution than the non-DC version, since this solution was considered in the non-DC search

------------
PART 13.3. Compare cap inversions cut-then-filter (original) vs filter-then-cut.
Example with Uturuncu event 20110622023324299

0. prepare run

> mkdir -p $CAPRUN/inv/utuhalf
> cd $CAPRUN/inv/utuhalf/
> rsync -av $CAPHOME/20110622023324299 .

1. Original cap mode. In cap.c set 
FTC_data=0, FTC_green=0, compile cap, then run

> cap.pl -H0.01 -P2e-5/1/30 -S0.1/2.0/0 -T1.5/60.0 -D1/1/0.5 -C1/10/0.1/0.4 -W1 -Y1 -F0 -L0.05 -E1 -K1 -I5/0/5 -J33.748/33.748/40/40 -R215/215/69.41/69.41/40/40 -Mutuhalf_9/0.6 -Zweight.dat 20110622023324299 

2. check output
> gv 20110622023324299/utuhalf_009_fmt.ps &
> gv $CAPHOME/20110622023324299_check/utuhalf_009_fmt_cut-filter.ps &

3. Filter-then-cut data. In cap.c set 
FTC_data=1, FTC_green=0, compile cap, then run

> cap.pl -H0.01 -P2e-5/1/30 -S0.1/2.0/0 -T1.5/60.0 -D1/1/0.5 -C1/10/0.1/0.4 -W1 -Y1 -F0 -L0.05 -E1 -K1 -I5/0/5 -J33.748/33.748/40/40 -R215/215/69.41/69.41/40/40 -Mutuhalf_9/0.6 -Zweight.dat 20110622023324299 

4. check output
> gv 20110622023324299/utuhalf_009_fmt.ps &
> gv $CAPHOME/20110622023324299_check/utuhalf_009_fmt_filter-cut-data.ps &

5. Filter-then-cut data and greens functions. In cap.c set 
FTC_data=1, FTC_green=1, compile cap, then run

> cap.pl -H0.01 -P0.5e+0.5/1/30 -S0.1/2.0/0 -T1.5/60.0 -D1/1/0.5 -C1/10/0.1/0.4 -W1 -Y1 -F0 -L0.05 -E1 -K1 -I5/0/5 -J33.748/33.748/40/40 -R215/215/69.41/69.41/40/40 -Mutuhalf_9/0.6 -Zweight.dat 20110622023324299 

Note: plotting flag is set to -P0.5e+0.5/... since greens functions in this mode appear too small

6. check output
> gv 20110622023324299/utuhalf_009_fmt.ps &
> gv $CAPHOME/20110622023324299_check/utuhalf_009_fmt_filter-cut-data-greens.ps &

------------
PART 13.4. Compare CAP solutions using different components: 
    1. pol + PV only
    2. pol + PR only
    3. pol + body only
    4. pol + surf only
    5. pol + body + surf

1a. pol + PV only
> cap.pl -H0.01 -P1e-06/1/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight_pv.dat 20100516063454464

1b. check output
gv 20100516063454464/utuhalf_005_fmt.ps 
gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt_pv.ps &

2a. pol + PR only
> cap.pl -H0.01 -P2e-06/1/33 -S0.2/2.0/0 -T1.5/60 -D1/1/0.5 -C2/10/0.25/0.5 -F0.0 -L0.1 -W1 -I5/0.1/5 -J-90/90/-30/30 -E1 -K1 -Y1 -Mutuhalf_5/2.4 -Zweight_pr.dat 20100516063454464

2b. compare

gv 20100516063454464/utuhalf_005_fmt.ps 
gv $CAPHOME/20100516063454464_check/utuhalf_005_fmt_pr.ps &

3. pol + body only
see above, Example #13.2.7 

4. pol + surf only
see above, Example #13.2.7 

5. pol + body + surf
see above, Example #13.2.4a 

====================================================================================
EXAMPLE 14: Running Alaska Example (20090407201255351)

1. set the path to green's function library
> xe cap.pl 
> $green = "/store/wf/FK_synthetics";       # standard models at UAF

2. open cap.c and check that FTC_data=0 and FTC_green=0 (recompile if needed: make all >& make.log )

3. prepare run
> mkdir -p $CAPRUN/inv/scak
> cd $CAPRUN/inv/scak
> rsync -av $CAPHOME/20090407201255351 .

4. run
> cap.pl -H0.02 -P3e-8/20/60 -p2 -S3/10/0 -T15/100 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0 -Zweight111.dat -E1 -K1 -Y1 20090407201255351

fixed solution (for plot testing)
> cap.pl -H0.02 -P3e-8/20/60 -S3/10/0 -T15/100 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/5.0 -R20/20/42/42/-90/-90 -I10/0.1 -Zweight111.dat -E1 -K1 -Y1 20090407201255351

5. For azimuthally sorted stations:
> cap.pl -H0.02 -P3e-8/20/60 -p2 -S3/10/0 -T15/100 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0 -Zaz_sort_weight111.dat -E1 -K1 -Y1 20090407201255351

6. For all the available stations
> cap.pl -H0.02 -P3e-8/20/60 -p2 -S3/10/0 -T15/100 -D1/1/0.5 -C0.2/0.5/0.025/0.06 -W1 -Mscak_41/4.5 -I10/0 -Zweight110.dat -E1 -K1 -Y1 20090407201255351

7. Checking the solutions
> gv 20090407201255351/scak_041.ps 
> gv $CAPHOME/20090407201255351/scak_041_az.ps (for azimuth sorting) OR
  gv $CAPHOME/20090407201255351_check/scak_041.ps & (for distance sorting)
> diff 20090407201255351/scak_041.out $CAPHOME/20090407201255351_check/scak_041.out

====================================================================================
TIPS

1. If running in debug mode, remember to remove all the log files otherwise they will be appended (not overwritten!).
2. When running in random seach mode and it doesn't create as many sample points as specified, 
   then retry by giving reduced orientation increment (example: if -I5/0 doesn't work, try -I2/0).
