README_EXAMPLE

Test examples for CAP.
The default example should always be run, prior to committing any changes to the code.

Figures to check are in the directory 20080418093700_check

============================================
STARTUP INSTRUCTIONS

0. if on UAF cluster, check modules (GMT, netcdf, gfortran)

> module purge
> module load PrgEnv-gnu/4.5.1 gmt/4.5.7
> module list

load environment variables

> source $EUTIL/seismo_bashrc

1. check paths (see .bashrc)

> echo "CAPHOME =" $CAPHOME ;  echo "CAPRUN =" $CAPRUN ; echo "NRHOME_C =" $NRHOME_C ; echo "GMTHOME =" $GMTHOME

Make sure that none of these is empty.

note: by default at UAF you can set this in your .bashrc:

export GEOTOOLS=$HOME/GEOTOOLS
export SUTIL=/usr/local/seismo
export NRHOME_C=$SUTIL/grp-utils/nr/NR_C302/legacy/nr2/C_211_mod
export NRHOME_F90=$SUTIL/grp-utils/nr/recipes_f-90
export CAPHOME=$GEOTOOLS/tomo_util/cap
export PATH=$CAPHOME:$PATH
export CAPRUN=$HOME/PROJECTS/CAP
export PATH=$PATH:$SUTIL/bin:$HOME/bin:.

2. set up directories that are consistent with $CAPRUN (above)

> echo $CAPRUN
> cd $CAPRUN
> mkdir -p models inv
> mkdir -p models/cus inv/cus

3. compile cap.c

> cd $CAPHOME
> make all >& make.log

4. check path to utilities

> which cap fk pssac2 cap.pl cap_plt.pl

Make sure that none of these is missing.

============================================
DEFAULT EXAMPLE 1: ILLINOIS EVENT, DOUBLE COUPLE

1. run fk (this uses the "cus" 1D model for "central U.S."

> cd $CAPRUN/models/cus
> cp $SUTIL/grp-utils/fk3.0/cus .
> fk.pl -Mcus/15 -N512/0.4/2 140 145 205 230 260 275 295

NOTE: You do not need to run fk if you have a pre-computed library of Green's functions.

2. run fk again to generate isotropic components

> fk.pl -Mcus/15 -N512/0.4/2 -S0 140 145 205 230 260 275 295

 This will create 3 additional green functions for each distance of the form dist.grn.(a-c),
 e.g., 140.grn.a, 140.grn.b, 140.grn.c.

3. prepare data directory

> cd $CAPRUN/inv/cus
> rsync -av $CAPHOME/20080418093700 .
> cd 20080418093700

Check that you have new weight.dat file with 12 columns (3 extra for Pnl_window, surf_pick, surf_window).
The old weight file is under the name weight_orig.dat

4. run cap

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 20080418093700
> gv 20080418093700/cus_015.ps &

You should see a reasonable output for a moment tensor inversion.

5. check the output files in 20080418093700: cus_15.out and cus_15.ps 
   compare with the same files in 20080418093700_check

> gv $CAPHOME/20080418093700_check/cus_15.ps &

6. perform the depth test

This requires computing Green's functions for the depths used in the grid search.

> cd $CAPRUN/models/cus
> fk.pl -Mcus/5  -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/5  -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/10 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/10 -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/20 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/20 -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/25 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/25 -N512/0.4/2 -S0 140 145 205 230 260 275 295
> fk.pl -Mcus/30 -N512/0.4/2 140 145 205 230 260 275 295 ; fk.pl -Mcus/30 -N512/0.4/2 -S0 140 145 205 230 260 275 295

Then run cap for each depth. One output (.out) file should be generated for each depth.

> cd $CAPRUN/inv/cus
> cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_5/5.0 20080418093700
> cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_10/5.0 20080418093700
> cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_20/5.0 20080418093700
> cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_25/5.0 20080418093700
> cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_30/5.0 20080418093700

From each output file extract and append the "Event" and "tensor" lines into separate files.

> grep -h "Event" 20080418093700/cus*.out > out.depth-event 
> grep -h "tensor" 20080418093700/cus*.out > out.depth-fmt

Run depth.pl

> depth.pl out.depth-event out.depth-fmt 20080418093700 > depth.ps
> gv depth.ps &

============================================
EXAMPLE 2: ILLINOIS EVENT, FMT with Zhu line search

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4. open cap.c

> cd $HOME/GEOTOOLS/tomo_util/cap
> xe cap.c
> check that full_mt_search=0 (and preferably debug=0 so that it do not generate numerous output files)
> save 
> make all

5. run cap
cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/.2 -J0/.2/0/0.2 20080418093700

6. view output plot
> gv 20080418093700/cus_015_fmt.ps

7. check the output files in 20080418093700: cus_15_fmt.out and cus_15_fmt.ps 
   compare with the same files in 20080418093700_check

----------------------------------
ISO and CLVD will be searched for in their general range (-1<ISO<+1 ; -0.5<CLVD<0.25). However you can change the increament by using -J flag in the input command line.

====================================================================================
EXAMPLE 3: ILLINOIS EVENT, FMT with lune parameterization, full grid search

1. Follow same step 1 EXAMPLE 1
2. Follow same step 2 EXAMPLE 1
3. Follow same step 3 EXAMPLE 1

4.  open cap.c

> cd $HOME/GEOTOOLS/tomo_util/cap
> xe cap.c
> check that full_mt_search=1 (and preferably debug=0 so that it do not generate numerous output files)
> save 
> make all

5.  run cap
cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/.2 -J0/5/0/5 20080418093700

6. Same as steps 6 to 7 of EXAMPLE 2

Examples 3:
To run in full moment tensor range open cap.c and set full_mt_search=1. You can also run in debug mode by setting debug=1. Both parameters are in the first line of code.
When running in full_mt_search mode, you need to enter the starting point Mw and the search will take place in Mw-1 to Mw+1 range. The search range can be changed in cap.c (by changing mt[0].max and mt[0].min) under the full_mt_search block in error function. Intial search point and search increment can be changed using -M and -I flag respectively in the input cap command.
OLD CODE: ISO and CLVD will be searched for in their general range (-1<ISO<+1 ; -0.5<CLVD<0.25). However you can change the increament by using -J flag in the input command line.
UPDATED version: ISO and CLVD will be searched for in their general range (-90ISO<90 ; -30<CLVD<30). However you can change the increment by using -J flag in the input command line. Using tt2cmt routine instead.

Step by step instruction
1. Open cap.c
2. Set full_mt_search=1; Keep debug=0 for intial testing. (In debug mode it will print multiple log files and hence time consuming).
3. Save 
4. make all (it is preferred to use 'make all' everytime instead of just using 'make cap', however both works)
5. cap.pl -H0.2 -P2.2e-6 -S2/5/0 -T35/70 -F -D2/1/0.5 -C0.05/0.3/0.02/0.1 -W1 -X10 -Mcus_15/5.0 -I10/.2 -J0/5/0/5 20080418093700
   Here intial Mw=5.0 (-Mcus_15/5.0). Mw_increment=0.2 (-I10/.2). Therefore search range 4<Mw<6. 
   Iso_increment=5 and clvd_incerement (-J0/5/0/5)

=======================