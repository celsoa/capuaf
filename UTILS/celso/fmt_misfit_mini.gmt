#!/bin/bash
#
# script to plot summary misfit from FMT inversion
#   
# 20150109 celso alvizuri - cralvizuri@alaska.edu
#-----------------------------------------------------------
# If you use this code for your own research, please cite:
# 
# @article{AlvizuriTape2016,
#      AUTHOR = {C. Alvizuri and C. Tape},
#      TITLE = {{Full moment tensors for small events ($\mw < 3$) at Uturuncu volcano, Bolivia}},
#      JOURNAL = {Geophys.~J.~Int. \rm(in prep.)},
#      PAGES = {},
#      VOLUME = {},
#      NUMBER = {},
#      EID = {},
#      DOI = {},
#      YEAR = {2015}
# }
#
#-----------------------------------------------------------

# preliminary flags
use_kludge="yes"    # "yes" or nothing
use_kludge=""       # "yes" or nothing

flag_make_cpt=""    # "yes" or nothing
flag_make_cpt="yes" # "yes" or nothing

# input
evid=$1
model=$2
depth=$3

if [ -z $evid ] || [ -z $depth ] || [ -z $model ] 
then
    printf "usage: $0 evid model depth\n"
    printf "eg. $0 20100516063454464 utuhalf 5\n"
    printf "\nusage 2: $0 evid         model depth wP wV wR wS\n"
    printf "eg. $0 20100516063454464 utuhalf 5   01 10 01 10\n\n"
    exit
fi

if [ -n "$4" ] & [ -n "$5" ] & [ -n "$6" ] & [ -n "$7" ] ; then
    wP=`printf "P%02d" $4`
    wV=`printf "V%02d" $5`
    wR=`printf "R%02d" $6`
    wS=`printf "S%02d" $7`
    job_name="_${wP}_${wV}_${wR}_${wS}"

    # if inputs 4-7 present then use them as label for inversion type
    #filename_add="P$4_V$5_R$6_S$7_"
    #inputdir_add="_P$4_V$5_R$6_S$7"
    filename_add="${wP}_${wV}_${wR}_${wS}_"
    inputdir_add="_${wP}_${wV}_${wR}_${wS}"
    echo ${filename_add} ${inputdir_add}

    if [ "$4" == "1" ] || [ "$4" == "01" ] ; then
        # comment the next line for Figure 10 uturuncu FMT
        #inversion_type="p PV $5 PR $6 Surf $7"
        echo
    elif [ "$4" == "0" ] || [ "$4" == "00" ] ; then
        # comment the next line for Figure 10 uturuncu FMT
        #inversion_type="np PV $5 PR $6 Surf $7"
        echo
    else
        printf "$0: abort. expecting pol label 0 or 1, got: \"$4\"\n"
        exit 1
    fi
    printf "$0: using labels for inversion type: $inversion_type \n"
fi
if [ "${8}" = "co" ] || [ "${8}" = "cc" ] || [ "${8}" = "dc" ] ; then
    st=`printf "%s" $8`  # source type
    job_name="${job_name}_${st}"
    flag_make_cpt=""    # for tests main event
elif [ "${8}" = "nocpt" ] ; then
    flag_make_cpt=""    # "yes" or nothing
fi

if [ -n "${9}" ] ; then
    # abort if too many inputs (>8)
    printf "$0: abort. too many labels.\n"
    printf "... 9=$9 10=${10} .. "
    exit
fi

# depth with leading zeros
label_depth="$depth"
depth=`printf "%03d" $depth`

# data directories
datadir_main="/home/alvizuri/shared/plutons/inversions/inv20151024_mainevent_tests"
datadir_main="/home/alvizuri/shared/plutons/inversions/inv20151028_utupaper_FMP_effects"
datadir_main="/home/alvizuri/shared/plutons/inversions/inv20150618_utuhalf_P00_V10_R01_S10_L_dt"
datadir_main="/home/alvizuri/shared/plutons/inversions/inv20150618_utuhalf_P01_V10_R01_S10_L_dt"
datadir_top="${datadir_main}"
datadir_job="job_${evid}${job_name}"
datadir_fmt="${datadir_top}/${datadir_job}/$evid/fmt"

# output
out="${datadir_fmt}/${evid}_${model}_${depth}_${filename_add}misfit_mini.ps"

# fmt data
data_stations="${datadir_fmt}/${evid}_${model}_${depth}_toa_az_stn_fmp"
data_misfit_wf="${datadir_fmt}/${evid}_${model}_${depth}_misfit_wf_psmeca"
data_misfit_wf_best_sol="${datadir_fmt}/${evid}_${model}_${depth}_misfit_wf_psmeca_best_sol"
data_inv_result="${datadir_fmt}/../${model}_${depth}.out"

if [ "$use_kludge" == "yes" ] ; then
    printf "$0: WARNING: Using kludge solutions\n"
    #         data_misfit_wf="${data_misfit_wf}_fix_1"               # KLUDGE!
    data_misfit_wf="${data_misfit_wf}_fix_1_IEXP"          # KLUDGE!
    data_misfit_wf_best_sol="${data_misfit_wf_best_sol}_fix_bbsize" # KLUDGE!
    size_lune_bb=0.11   # KLUDGE!
else
    size_lune_bb=0.32
fi

# check that data exists
if [ -e $data_stations ] || [ -e $data_misfit_wf ] || [ -e $data_misfit_wf_best_sol ] ;
then
    printf "$0: reading input files:\n"
    printf "%s\n%s\n%s\n%s\n%s\n" $data_stations $data_misfit_wf $data_inv_result $data_misfit_wf_best_sol
else
    printf "$0: input files missing. check:\n"
    printf "%s\n%s\n%s\n%s\n%s\n" $data_stations $data_misfit_wf $data_inv_result $data_misfit_wf_best_sol
    exit 1
fi

# gmt
gmtdefaults -D > .gmtdefaults4
gmtset MEASURE_UNIT inch # cm / inch
gmtset PAGE_ORIENTATION portrait
gmtset BASEMAP_TYPE plain
gmtset PAPER_MEDIA letter
gmtset LABEL_FONT_SIZE 12 
gmtset ANOT_FONT_SIZE 12
gmtset PLOT_DEGREE_FORMAT ddd.x
gmtset CHAR_ENCODING Standard+
gmtset FRAME_PEN 0.2p

# get event data (from CAP out file)
evlon=`awk 'NR==2 {printf "%9.4f", $6}' ${data_inv_result}`
evlat=`awk 'NR==2 {printf "%9.4f", $4}' ${data_inv_result}`
evdep=`awk 'NR==2 {printf "%.1f", $8}'  ${data_inv_result}`
evmag=`awk 'NR==1 {printf "%.2f", $10}' ${data_inv_result}`
printf "\n$0: event data: $data_inv_result: $evlon $evlat $evdep $evmag\n"

label_best_sol="`awk '{printf "@~g@~ = %.0f\217, @~d@~ = %.0f\217", $1, $2}' ${data_misfit_wf_best_sol}`"
label_mod_dep_mag="$model $label_depth km Mw $evmag"

# get cpt ranges then get cpt
#misfit_min=`minmax -C $data_misfit_wf | awk '{if ($5<=0.0) printf "0.0" ; else printf "%e",$5}'` # consider set negative values to 0
misfit_min=`minmax -C $data_misfit_wf | awk '{printf "%e",$5}'`
misfit_max=`minmax -C $data_misfit_wf | awk '{printf "%e",$6}'`
misfit_del=`echo $misfit_min $misfit_max | awk '{printf "%5.2e",($2-$1)/100}'`
misfit_del_c=`echo $misfit_min $misfit_max | awk '{printf "%5.2e",($2-$1)/2}'`
printf "$0: min/misfit_del/max: $misfit_min / $misfit_del / $misfit_max\n"

# cpt colors: cool , polar, jet,  *panoply -I, polar, seis, sealand
if [ "$flag_make_cpt" == "yes" ] ; then
    if [ $misfit_min == $misfit_max ] ; then
        makecpt -Cpanoply -D -I > cpt_misfit
        makecpt -Cpanoply -D -I > cpt_misfit_c
    else
        # panoply
        makecpt -Cpanoply -D -I -T${misfit_min}/${misfit_max}/${misfit_del} > cpt_misfit
        makecpt -Cpanoply -D -I -T${misfit_min}/${misfit_max}/${misfit_del_c} > cpt_misfit_c
    fi
fi

# Labels
#echo "0 1.80 10 0 0 LM $label_extra"       | pstext -R0/8.5/0/11 -JX8/11 -O -K -Xa0.85i -Ya6.00i -N >> $out
label_vr_min=`printf "%.0f" ${misfit_min}`
label_vr_max=`printf "%.0f" ${misfit_max}`
label_vr="VR = ${label_vr_max} (${label_vr_min} to ${label_vr_max})"

echo "0 2.60 10 0 0 LM $evid" | pstext -R0/8.5/0/11 -JX8/11 -K -Xa0.85i -Ya6.00i -N > $out
echo "0 2.40 10 0 0 LM $label_best_sol" | pstext -R0/8.5/0/11 -JX8/11 -O -K -Xa0.85i -Ya6.00i -N >> $out
echo "0 2.20 10 0 0 LM $label_mod_dep_mag" | pstext -R0/8.5/0/11 -JX8/11 -O -K -Xa0.85i -Ya6.00i -N >> $out
echo "0 2.00 10 0 0 LM  ${label_vr}" | pstext -R0/8.5/0/11 -JX8/11 -O -K -Xa0.85i -Ya6.00i -N >> $out
echo "0 1.80 10 0 0 LM $inversion_type" | pstext -R0/8.5/0/11 -JX8/11 -O -K -Xa0.85i -Ya6.00i -N >> $out

# beachball with lowest misfit/highest VR
printf "$0: plotting solution with lowest misfit\n"

awk '{print "0 1e-10", $3, $4, $5, $6, $7, $8, $9, "23"}' ${data_misfit_wf_best_sol} \
    | psmeca -JPa1.5i -R0/360/0/1 -Xa0.85i -Ya6.00i -Sm1.7 -N -W1.0p,0/0/0 -Zcpt_misfit -L -O -K >> $out

# stations + polarities
awk '{if($5>0) print $8, $10}' $data_stations  \
    | psxy -JPa1.5i -R0/360/0/1 -Xa0.85i -Ya6.00i -Sc0.12i -N -W1p -G0/175/255 -O -K >> $out
awk '{if($5<0) print $8, $10}' $data_stations  \
    | psxy -JPa1.5i -R0/360/0/1 -Xa0.85i -Ya6.00i -Sc0.12i -N -W1p -G255/255/255 -O -K >> $out

# plot stations without polarity
awk '{if($5==0) print $8, $10}' $data_stations  \
    | psxy -JPa1.5i -R0/360/0/1 -Xa0.85i -Ya6.00i -Ss0.1i -N -W1p,black -Ggray -O -K >> $out

echo "0 0" | psxy -JPa1.5i -R0/360/0/1 -Xa0.85i -Ya6.00i -S+0.1i -N -W1.5p,black -O -K >> $out

# print all stations regardless of pol info
awk  '{ print $8, $10, 7, 0, 1, "CM", $2 }' $data_stations  \
    | pstext -JPa1.5i -R0/360/0/1 -Xa0.85i -Ya6.00i -D0/0.12 -S1.5p,white -N -O -K  >> $out

# lune 
psbasemap -JH0/1i -R-30/30/-90/90 -Bg15/g30 -G255/255/255 -O -K -Xa2.70i -Ya6.00i  >> $out

# misfit
(echo -30 35.2644 ; echo 30 54.7356)  | psxy -N -W0.5p,0 -JH0/1i -R-30/30/-90/90 -O -K -Xa2.70i -Ya6.00i >> $out
(echo -30 -54.7356; echo 30 -35.2644) | psxy -N -W0.5p,0 -JH0/1i -R-30/30/-90/90 -O -K -Xa2.70i -Ya6.00i >> $out
(echo -30 35.2644 ; echo 30 -35.2644) | psxy -N -W0.5p,0 -JH0/1i -R-30/30/-90/90 -O -K -Xa2.70i -Ya6.00i >> $out

# all solutions on the lune
psxy ${data_misfit_wf} -JH0/1i -R-30/30/-90/90 -Sc0.15c -N -Ccpt_misfit -L -O -K -Xa2.70i -Ya6.00i >> $out

# show best solution on lune
psxy ${data_misfit_wf_best_sol} -R-30/30/-90/90 -JH0/1i -N -S+16p -W5p,black -Xa2.70i -Ya6.00i -O -K >>$out
psxy ${data_misfit_wf_best_sol} -R-30/30/-90/90 -JH0/1i -N -S+14p -W2p,white -Xa2.70i -Ya6.00i -O >>$out

# prepare figure for paper
ps2eps -f $out
echo "figure saved to:  $out"

